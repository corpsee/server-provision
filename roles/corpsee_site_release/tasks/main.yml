---

- name:     Register release datetime
  command:  date +%Y-%m-%d_%H-%M-%S
  register: release_datetime

- name:        Copy current release for backup
  shell:       "cp --dereference --recursive --no-target-directory /var/www/{{ corpsee_site_hostname }}/current /var/www/{{ corpsee_site_hostname }}/{{ corpsee_site_hostname }}_{{ release_datetime.stdout }}"
  become:      yes
  become_user: "{{ corpsee_site_user }}"

- name:        Copy current release SQL dump for backup
  shell:       "pg_dump -O --column-inserts -F p -U {{ corpsee_site_db_user }} -d {{ corpsee_site_db_name }} -h 127.0.0.1 | grep -v -E '^(CREATE\ EXTENSION|COMMENT\ ON)' > /var/www/{{ corpsee_site_hostname }}/{{ corpsee_site_hostname }}_{{ release_datetime.stdout }}/{{ corpsee_site_db_name }}.backup.sql"
  become:      yes
  become_user: "{{ corpsee_site_user }}"

- name:        Create current release backup archive
  shell:       "tar -czf /home/web/backup/{{ corpsee_site_hostname }}_{{ release_datetime.stdout }}.tar.gz ."
  become:      yes
  become_user: "{{ corpsee_site_user }}"
  args:
    chdir: "/var/www/{{ corpsee_site_hostname }}/{{ corpsee_site_hostname }}_{{ release_datetime.stdout }}"

- name:        Delete current release for backup
  file:        path="/var/www/{{ corpsee_site_hostname }}/{{ corpsee_site_hostname }}_{{ release_datetime.stdout }}" state=absent
  become:      yes
  become_user: "{{ corpsee_site_user }}"

- name:        Clone latest PHP Censor repository (LOCAL)
  git:         repo="git@github.com:corpsee/corpsee-com.git" version="{{ corpsee_site_version }}" dest="{{ role_path }}/files/{{ release_datetime.stdout }}" accept_hostkey=yes
  become:      yes
  become_user: "{{ corpsee_site_localhost_user }}"
  delegate_to: "127.0.0.1"

- name: Delete shared directories (LOCAL)
  file: path="{{ role_path }}/files/{{ release_datetime.stdout }}/{{ item }}" state=absent
  loop:
    - "www/files/pictures/x"
    - "www/files/pictures/xgray"
    - "www/files/pictures/xmin"
    - "www/files/posts"
    - "www/files/projects"
    - "www/slides"
    - "www/yanka"
  become:      yes
  become_user: "{{ corpsee_site_localhost_user }}"
  delegate_to: "127.0.0.1"

- name:    Install Corpsee site dependencies (LOCAL)
  command: "php{{ corpsee_site_php_version }} /usr/local/bin/composer install --no-dev --optimize-autoloader --prefer-dist"
  args:
    chdir:   "{{ role_path }}/files/{{ release_datetime.stdout }}"
    creates: "{{ role_path }}/files/{{ release_datetime.stdout }}/vendor"
  become:      yes
  become_user: "{{ corpsee_site_localhost_user }}"
  when:        not site_directory.stat.exists
  delegate_to: "127.0.0.1"

- name:    Compile assets (LOCAL)
  command: "php{{ corpsee_site_php_version }} console assets:compile --package frontend"
  args:
    chdir:   "{{ role_path }}/files/{{ release_datetime.stdout }}"
    creates: "{{ role_path }}/files/{{ release_datetime.stdout }}/www/files/compiled/frontend.min.css"
  become:      yes
  become_user: "{{ corpsee_site_localhost_user }}"
  when:        not site_directory.stat.exists
  delegate_to: "127.0.0.1"

- name: Delete non-production files (LOCAL)
  file: path="{{ role_path }}/files/{{ release_datetime.stdout }}/{{ item }}" state=absent
  loop:
    - ".git"
    - ".gitignore"
    - ".php-censor.yml"
    - ".travis.yml"
    - "deploy.sh"
    - "phpunit.xml"
    - "src/configs/config.production.php"
    - "src/configs/config.debug.php"
    - "www/index.production.php"
    - "www/index.debug.php"
    - "www/.htaccess"
    - "deploy"
    - "tests"
    - "cache/.gitkeep"
    - "www/files/compiled/.gitkeep"
  become:      yes
  become_user: "{{ corpsee_site_localhost_user }}"
  when:        not site_directory.stat.exists
  delegate_to: "127.0.0.1"

- name:        Archive Corpsee site release (LOCAL)
  shell:       "tar -czf {{ role_path }}/files/{{ release_datetime.stdout }}.tar.gz ."
  become:      yes
  become_user: "{{ corpsee_site_localhost_user }}"
  args:
    chdir: "{{ role_path }}/files/{{ release_datetime.stdout }}"
  delegate_to: "127.0.0.1"

- name: Creates Corpsee site release directory
  file: path="/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}" state=directory
  when: not site_directory.stat.exists

- name:      Copy Corpsee site release to host
  unarchive: src="{{ role_path }}/files/{{ release_datetime.stdout }}.tar.gz" dest="/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}"
  when:      not site_directory.stat.exists

- name: Set shared directories links
  file: src="{{ item.src }}" dest="{{ item.dest }}" state=link
  loop:
    - { src: "/var/www/{{ corpsee_site_hostname }}/shared/www/files/pictures/x", dest: "/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}/www/files/pictures/x" }
    - { src: "/var/www/{{ corpsee_site_hostname }}/shared/www/files/pictures/xgray", dest: "/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}/www/files/pictures/xgray" }
    - { src: "/var/www/{{ corpsee_site_hostname }}/shared/www/files/pictures/xmin", dest: "/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}/www/files/pictures/xmin" }
    - { src: "/var/www/{{ corpsee_site_hostname }}/shared/www/files/posts", dest: "/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}/www/files/posts" }
    - { src: "/var/www/{{ corpsee_site_hostname }}/shared/www/files/projects", dest: "/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}/www/files/projects" }
    - { src: "/var/www/{{ corpsee_site_hostname }}/shared/www/slides", dest: "/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}/www/slides" }
    - { src: "/var/www/{{ corpsee_site_hostname }}/shared/www/yanka", dest: "/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}/www/yanka" }
    - { src: "/var/www/{{ corpsee_site_hostname }}/shared/logs", dest: "/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}/logs" }
    - { src: "/var/www/{{ corpsee_site_hostname }}/shared/www/index.php", dest: "/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}/www/index.php" }
    - { src: "/var/www/{{ corpsee_site_hostname }}/shared/src/configs/config.php", dest: "/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}/src/configs/config.php" }

- name: Set permitions for Corpsee site directory
  file: path="/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}" owner={{ corpsee_site_user }} group={{ corpsee_site_group }} mode="ug=rwX,o=rX" recurse=yes

- name: Set Corpsee site console executable
  file: path="/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}/console" owner={{ corpsee_site_user }} group={{ corpsee_site_group }} mode="ugo+x"

- name:        Make migrations
  command:     ./console migrations:migrate -e corpsee_site
  become:      yes
  become_user: "{{ corpsee_site_user }}"
  args:
    chdir: "/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}"

- name: Set current release link
  file: src="/var/www/{{ corpsee_site_hostname }}/releases/{{ release_datetime.stdout }}" dest="/var/www/{{ corpsee_site_hostname }}/current" state=link

- name:    Restart PHP FPM systemd service
  systemd: name="php{{ corpsee_site_php_version }}-fpm.service" state=restarted
