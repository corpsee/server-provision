---

- name:     Register release datetime
  command:  date +%Y-%m-%d_%H-%M-%S
  register: release_datetime

- name:        Copy current release for backup
  shell:       "cp --dereference --recursive --no-target-directory /var/www/{{ corpsee_site_dir_name }}/current /var/www/{{ corpsee_site_dir_name }}/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}"
  become:      yes
  become_user: "{{ corpsee_site_user }}"

- name:        Copy current release SQL dump for backup
  shell:       "pg_dump -O --column-inserts -F p -U {{ corpsee_site_db_user }} -d {{ corpsee_site_db_name }} -h 127.0.0.1 | grep -v -E '^(CREATE\ EXTENSION|COMMENT\ ON)' > /var/www/{{ corpsee_site_dir_name }}/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}/{{ corpsee_site_db_name }}.backup.sql"
  become:      yes
  become_user: "{{ corpsee_site_user }}"

- name:        Create current release backup archive
  shell:       "tar --create --gzip --file=\"/home/web/backup/{{ corpsee_site_dir_name }}/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}.tar.gz\" ."
  become:      yes
  become_user: "{{ corpsee_site_user }}"
  args:
    chdir: "/var/www/{{ corpsee_site_dir_name }}/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}"

- name:        Delete current release for backup
  file:        path="/var/www/{{ corpsee_site_dir_name }}/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}" state=absent
  become:      yes
  become_user: "{{ corpsee_site_user }}"

- name:        Clone latest Corpsee Site repository (LOCAL)
  git:         repo="git@github.com:corpsee/corpsee-site.git" version="{{ corpsee_site_version }}" dest="{{ role_path }}/files/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}" accept_hostkey=yes
  become:      yes
  become_user: "{{ corpsee_site_localhost_user }}"
  delegate_to: "127.0.0.1"

- name:     Create Corpsee Site ENV file (LOCAL)
  template: src=".env.local.{{ corpsee_site_mode }}" dest="{{ role_path }}/files/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}/.env.local"
  become:      yes
  become_user: "{{ corpsee_site_localhost_user }}"
  delegate_to: "127.0.0.1"

- name:    Install Corpsee Site dependencies (LOCAL)
  command: "php{{ corpsee_site_php_version }} /usr/local/bin/composer install --no-dev --optimize-autoloader --prefer-dist"
  args:
    chdir:   "{{ role_path }}/files/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}"
    creates: "{{ role_path }}/files/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}/vendor"
  become:      yes
  become_user: "{{ corpsee_site_localhost_user }}"
  delegate_to: "127.0.0.1"

- name:    Warmup cache (LOCAL)
  command: "php{{ corpsee_site_php_version }} bin/console cache:clear"
  args:
    chdir:   "{{ role_path }}/files/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}"
    creates: "{{ role_path }}/files/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}/var/cache"
  become:      yes
  become_user: "{{ corpsee_site_localhost_user }}"
  delegate_to: "127.0.0.1"

- name:    Install Corpsee Site frontend dependencies (LOCAL)
  command: "npm install"
  args:
    chdir:   "{{ role_path }}/files/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}"
    creates: "{{ role_path }}/files/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}/node_modules"
  become:      yes
  become_user: "{{ corpsee_site_localhost_user }}"
  delegate_to: "127.0.0.1"

- name:    Install Corpsee Site frontend dependencies and compile assets (LOCAL)
  command: "node_modules/.bin/encore production"
  args:
    chdir:   "{{ role_path }}/files/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}"
    creates: "{{ role_path }}/files/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}/public/build"
  become:      yes
  become_user: "{{ corpsee_site_localhost_user }}"
  delegate_to: "127.0.0.1"

- name: Delete shared directories (LOCAL)
  file: path="{{ role_path }}/files/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}/{{ item }}" state=absent
  loop:
    - "public/files"
    - "var/log"
    - ".env.local"
  become:      yes
  become_user: "{{ corpsee_site_localhost_user }}"
  delegate_to: "127.0.0.1"

- name: Delete non-production files (LOCAL)
  file: path="{{ role_path }}/files/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}/{{ item }}" state=absent
  loop:
    - ".git"
    - ".gitignore"
    - "phpunit.xml.dist"
    - "tests"
    - "node_modules"
  become:      yes
  become_user: "{{ corpsee_site_localhost_user }}"
  delegate_to: "127.0.0.1"

- name:        Archive Corpsee Site release (LOCAL)
  shell:       "tar --create --gzip --file=\"{{ role_path }}/files/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}.tar.gz\" ."
  become:      yes
  become_user: "{{ corpsee_site_localhost_user }}"
  args:
    chdir: "{{ role_path }}/files/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}"
  delegate_to: "127.0.0.1"

- name: Creates Corpsee Site release directory
  file: path="/var/www/{{ corpsee_site_dir_name }}/releases/{{ release_datetime.stdout }}" state=directory

- name:      Copy Corpsee Site release to host
  unarchive: src="{{ role_path }}/files/{{ corpsee_site_dir_name }}_{{ release_datetime.stdout }}.tar.gz" dest="/var/www/{{ corpsee_site_dir_name }}/releases/{{ release_datetime.stdout }}"

- name: Creates Corpsee Site release var directory
  file: path="/var/www/{{ corpsee_site_dir_name }}/releases/{{ release_datetime.stdout }}/var" state=directory

- name: Set shared directories links
  file: src="{{ item.src }}" dest="{{ item.dest }}" state=link
  loop:
    - { src: "../../../../shared/public/files", dest: "/var/www/{{ corpsee_site_dir_name }}/releases/{{ release_datetime.stdout }}/public/files" }
    - { src: "../../../../shared/var/log", dest: "/var/www/{{ corpsee_site_dir_name }}/releases/{{ release_datetime.stdout }}/var/log" }
    - { src: "../../../shared/.env.local", dest: "/var/www/{{ corpsee_site_dir_name }}/releases/{{ release_datetime.stdout }}/.env.local" }

- name: Set permissions for Corpsee Site directory
  file: path="/var/www/{{ corpsee_site_dir_name }}/releases/{{ release_datetime.stdout }}" owner={{ corpsee_site_user }} group={{ corpsee_site_group }} mode="ug=rwX,o=rX" recurse=yes

- name: Set Corpsee Site console executable
  file: path="/var/www/{{ corpsee_site_dir_name }}/releases/{{ release_datetime.stdout }}/bin/console" owner={{ corpsee_site_user }} group={{ corpsee_site_group }} mode="ugo+x"

- name:        Make migrations
  command:     ./bin/console doctrine:migrations:migrate --no-interaction
  become:      yes
  become_user: "{{ corpsee_site_user }}"
  args:
    chdir: "/var/www/{{ corpsee_site_dir_name }}/releases/{{ release_datetime.stdout }}"

- name: Set current release link
  file: src="./releases/{{ release_datetime.stdout }}" dest="/var/www/{{ corpsee_site_dir_name }}/current" state=link

- name:    Restart PHP FPM systemd service
  systemd: name="php{{ corpsee_site_php_version }}-fpm.service" state=restarted
