---

- name:     Check if PHP Censor directory is exists
  stat:     path="/var/www/{{ php_censor_hostname }}/current"
  register: site_directory

- name:     Register release datetime
  command:  date +%Y-%m-%d_%H-%M-%S
  register: release_datetime
  when:     not site_directory.stat.exists

- name: Clone latest PHP Censor repository
  git:  repo="git@github.com:php-censor/php-censor.git" version="{{ php_censor_version }}" dest="/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}" key_file="/root/.ssh/web_server_github" accept_hostkey=yes
  when: not site_directory.stat.exists

- name: Set current release link
  file: src="/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}" dest="/var/www/{{ php_censor_hostname }}/current" state=link
  when: not site_directory.stat.exists

- name: Creates sharted directories
  file: path="{{ item }}" state=directory
  loop:
    - "/var/www/{{ php_censor_hostname }}/shared/runtime/builds"
    - "/var/www/{{ php_censor_hostname }}/shared/runtime/cache"
    - "/var/www/{{ php_censor_hostname }}/shared/runtime/status_cache"
    - "/var/www/{{ php_censor_hostname }}/shared/public"
  when: not site_directory.stat.exists

- name:      Copy PHP Censor files to host
  unarchive: src="{{ role_path }}/files/{{ php_censor_artifacts_dir_filename }}" dest="/var/www/{{ php_censor_hostname }}/shared/public"
  when:      not site_directory.stat.exists

- name: Delete shared directories
  file: path="{{ item }}" state=absent
  loop:
    - "/var/www/{{ php_censor_hostname }}/current/runtime"
    - "/var/www/{{ php_censor_hostname }}/current/public/artifacts"
  when: not site_directory.stat.exists

- name: Set shared directories links
  file: src="{{ item.src }}" dest="{{ item.dest }}" state=link
  loop:
    - { src: "/var/www/{{ php_censor_hostname }}/shared/runtime", dest: "/var/www/{{ php_censor_hostname }}/current/runtime" }
    - { src: "/var/www/{{ php_censor_hostname }}/shared/public/artifacts", dest: "/var/www/{{ php_censor_hostname }}/current/public/artifacts" }
  when: not site_directory.stat.exists

- name:     Create PHP Censor application config (config.yml)
  template: src=config.yml dest="/var/www/{{ php_censor_hostname }}/current/app/config.yml"
  when:     not site_directory.stat.exists

- name: Create PHP Censor periodical config (periodical.yml)
  copy: src="{{ role_path }}/files/{{ php_censor_periodical_config_filename }}" dest="/var/www/{{ php_censor_hostname }}/current/app/periodical.yml"
  when: not site_directory.stat.exists

- name: Delete non-production files
  file: path="{{ item }}" state=absent
  loop:
    - "/var/www/{{ php_censor_hostname }}/current/.git"
    - "/var/www/{{ php_censor_hostname }}/current/.github"
    - "/var/www/{{ php_censor_hostname }}/current/docs"
    - "/var/www/{{ php_censor_hostname }}/current/tests"
    - "/var/www/{{ php_censor_hostname }}/current/.codecov.yml"
    - "/var/www/{{ php_censor_hostname }}/current/.editorconfig"
    - "/var/www/{{ php_censor_hostname }}/current/.gitattributes"
    - "/var/www/{{ php_censor_hostname }}/current/.gitignore"
    - "/var/www/{{ php_censor_hostname }}/current/.php-censor.yml"
    - "/var/www/{{ php_censor_hostname }}/current/.php_cs.dist"
    - "/var/www/{{ php_censor_hostname }}/current/.travis.yml"
    - "/var/www/{{ php_censor_hostname }}/current/phpmd.xml.dist"
    - "/var/www/{{ php_censor_hostname }}/current/phpunit.xml.dist"
    - "/var/www/{{ php_censor_hostname }}/current/app/.gitkeep"
    - "/var/www/{{ php_censor_hostname }}/current/public/artifacts/.gitkeep"
  when: not site_directory.stat.exists

- name: Set permitions for PHP Censor directory
  file: path="/var/www/{{ php_censor_hostname }}" owner={{ php_censor_user }} group={{ php_censor_group }} mode="ug=rwX,o=rX" recurse=yes
  when: not site_directory.stat.exists

- name: Set PHP Censor console executable
  file: path="/var/www/{{ php_censor_hostname }}/current/bin" owner={{ php_censor_user }} group={{ php_censor_group }} mode="ugo+x" recurse=yes
  when: not site_directory.stat.exists

- name:        Install PHP Censor dependencies
  command:     composer install --no-dev --optimize-autoloader
  become:      yes
  become_user: "{{ php_censor_user }}"
  args:
    chdir:   "/var/www/{{ php_censor_hostname }}/current"
    creates: "/var/www/{{ php_censor_hostname }}/current/vendor"
  when: not site_directory.stat.exists

- name:        Make migrations
  command:     ./bin/console php-censor-migrations:migrate
  become:      yes
  become_user: "{{ php_censor_user }}"
  args:
    chdir: "/var/www/{{ php_censor_hostname }}/current"
  when: not site_directory.stat.exists
