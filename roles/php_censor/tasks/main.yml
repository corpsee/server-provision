---

- name:          Create PHP Censor DB
  postgresql_db: name="{{ php_censor_db_name }}"
  become:        true
  become_user:   postgres

- name:            Create PHP Censor DB user
  postgresql_user: db="{{ php_censor_db_name }}" name="{{ php_censor_db_user }}" password="{{ php_censor_db_password }}" role_attr_flags="NOSUPERUSER,NOCREATEDB" encrypted=yes priv=ALL
  become:          true
  become_user:     postgres

- name: Install Beanstalkd queue
  apt:  pkg="beanstalkd"

- name:    Download latest PHP Censor
  command: composer create-project php-censor/php-censor "{{ php_censor_hostname }}" "{{ php_censor_version }}" --keep-vcs
  args:
    chdir:   /var/www
    creates: "/var/www/{{ php_censor_hostname }}"

- name: Set permitions for PHP Censor directory
  file: path="/var/www/{{ php_censor_hostname }}" owner={{ php_censor_user }} group={{ php_censor_group }} mode="ug=rwX,o=rX" recurse=yes

- name: Set PHP Censor console executable
  file: path="/var/www/{{ php_censor_hostname }}/bin" owner={{ php_censor_user }} group={{ php_censor_group }} mode="ugo+x" recurse=yes

- name:        Install PHP Censor
  command:     ./bin/console php-censor:install --url="{{ php_censor_url }}" --db-type=pgsql --db-host=localhost --db-name={{ php_censor_db_name }} --db-user={{ php_censor_db_user }} --db-password={{ php_censor_db_password }} --db-port=null --admin-name={{ php_censor_admin_user }} --admin-password={{ php_censor_admin_password }} --admin-email="{{ php_censor_admin_email }}" --queue-use=1 --queue-host=localhost --queue-name="{{ php_censor_queue_name }}"
  become:      yes
  become_user: "{{ php_censor_user }}"
  args:
    chdir:   "/var/www/{{ php_censor_hostname }}"
    creates: "/var/www/{{ php_censor_hostname }}/app/config.yml"

- name:     Create PHP Censor host
  template: src=php_censor.conf dest="/etc/nginx/sites-available/{{ php_censor_hostname }}.conf"

- name:   Enable PHP Censor host
  file:   src="/etc/nginx/sites-available/{{ php_censor_hostname }}.conf" dest="/etc/nginx/sites-enabled/{{ php_censor_hostname }}.conf" state=link
  notify: Restart Nginx

- name:     Create PHP Censor worker systemd service
  template: src=php_censor.service dest="/etc/systemd/system/{{ php_censor_queue_name }}.service"

- name:    Enable and start PHP Censor worker systemd service
  systemd: name="{{ php_censor_queue_name }}.service" state=started enabled=yes
