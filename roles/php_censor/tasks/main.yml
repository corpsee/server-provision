---

- name: Copy PHP Censor DB dump to host
  copy: src="{{ role_path }}/files/{{ php_censor_db_dump_filename }}.sql" dest="/tmp"

- name:          Create PHP Censor DB
  postgresql_db: name="{{ php_censor_db_name }}" state=present
  become:        true
  become_user:   postgres
  register:      php_censor_database

- name:            Create PHP Censor DB user
  postgresql_user: db="{{ php_censor_db_name }}" name="{{ php_censor_db_user }}" password="{{ php_censor_db_password }}" role_attr_flags="NOSUPERUSER,NOCREATEDB" encrypted=yes priv=ALL
  become:          true
  become_user:     postgres

- name:          Restore PHP Censor DB dump
  postgresql_db: name="{{ php_censor_db_name }}" state=restore target="/tmp/{{ php_censor_db_dump_filename }}.sql" login_user="{{ php_censor_db_user }}" login_password="{{ php_censor_db_password }}" login_host=localhost
  when:          php_censor_database.changed

- name: Install Beanstalkd queue
  apt:  name="beanstalkd" state=latest

- name: Create PHP Censor directory
  file: path="/var/www/{{ php_censor_hostname }}" state=directory

- name:    Download latest PHP Censor
  command: composer create-project php-censor/php-censor current "{{ php_censor_version }}"
  args:
    chdir:   "/var/www/{{ php_censor_hostname }}"
    creates: "/var/www/{{ php_censor_hostname }}/current"

- name:     Create PHP Censor application config
  template: src=config.yml dest="/var/www/{{ php_censor_hostname }}/current/app/config.yml"

- name: Set permitions for PHP Censor directory
  file: path="/var/www/{{ php_censor_hostname }}/current" owner={{ php_censor_user }} group={{ php_censor_group }} mode="ug=rwX,o=rX" recurse=yes

- name: Set PHP Censor console executable
  file: path="/var/www/{{ php_censor_hostname }}/current/bin" owner={{ php_censor_user }} group={{ php_censor_group }} mode="ugo+x" recurse=yes

#- name:        Install PHP Censor
#  command:     ./bin/console php-censor:install --url="{{ php_censor_url }}" --db-type=pgsql --db-host=localhost --db-name={{ php_censor_db_name }} --db-user={{ php_censor_db_user }} --db-password={{ php_censor_db_password }} --db-port=null --admin-name={{ php_censor_admin_user }} --admin-password={{ php_censor_admin_password }} --admin-email="{{ php_censor_admin_email }}" --queue-use=1 --queue-host=localhost --queue-name="{{ php_censor_queue_name }}"
#  become:      yes
#  become_user: "{{ php_censor_user }}"
#  args:
#    chdir:   "/var/www/{{ php_censor_hostname }}/current"
#    creates: "/var/www/{{ php_censor_hostname }}/current/app/config.yml"

- name:     Create PHP Censor host
  template: src=php_censor.conf dest="/etc/nginx/sites-available/{{ php_censor_hostname }}.conf"

- name:   Enable PHP Censor host
  file:   src="/etc/nginx/sites-available/{{ php_censor_hostname }}.conf" dest="/etc/nginx/sites-enabled/{{ php_censor_hostname }}.conf" state=link
  notify: Restart Nginx

- name:     Create PHP Censor worker systemd service
  template: src=php_censor.service dest="/etc/systemd/system/{{ php_censor_queue_name }}.service"

- name:    Enable and start PHP Censor worker systemd service
  systemd: name="{{ php_censor_queue_name }}.service" state=started enabled=yes
