---

- name:          Create Corpsee site DB
  postgresql_db: name="{{ corpsee_site_db_name }}"
  become:        true
  become_user:   postgres

- name:            Create Corpsee site DB user
  postgresql_user: db="{{ corpsee_site_db_name }}" name="{{ corpsee_site_db_user }}" password="{{ corpsee_site_db_password }}" role_attr_flags="NOSUPERUSER,NOCREATEDB" encrypted=yes priv=ALL
  become:          true
  become_user:     postgres

- name: Create the SSH public key file
  copy: content="{{lookup('file', '~/.ssh/github.pub')}}" dest=/root/.ssh/github.pub mode=0600

- name: Create the SSH private key file
  copy: content="{{lookup('file', '~/.ssh/github')}}" dest=/root/.ssh/github mode=0600

- name: Clone latest Corpsee site repository
  git:  repo="git@github.com:corpsee/corpsee-com.git" dest="/var/www/{{ corpsee_site_hostname }}" key_file="/root/.ssh/github" accept_hostkey=yes

- name: Creates logs directory
  file: path="/var/www/{{ corpsee_site_hostname }}/logs" state=directory

- name:     Create Corpsee site config
  template: src=config.php dest="/var/www/{{ corpsee_site_hostname }}/src/configs/config.php"

- name:     Create Corpsee site index.php file
  template: src=index.php dest="/var/www/{{ corpsee_site_hostname }}/www/index.php"

- name: Set permitions for Corpsee site directory
  file: path="/var/www/{{ corpsee_site_hostname }}" owner={{ corpsee_site_user }} group={{ corpsee_site_group }} mode="ug=rwX,o=rX" recurse=yes

- name: Set Corpsee site console executable
  file: path="/var/www/{{ corpsee_site_hostname }}/console" owner={{ corpsee_site_user }} group={{ corpsee_site_group }} mode="ugo+x"

- name:        Install Corpsee site dependencies
  command:     composer install --no-dev --optimize-autoloader
  become:      yes
  become_user: "{{ corpsee_site_user }}"
  args:
    chdir:   "/var/www/{{ corpsee_site_hostname }}"
    creates: "/var/www/{{ corpsee_site_hostname }}/vendor"

- name:        Compile assets
  command:     ./console assets:compile --package frontend
  become:      yes
  become_user: "{{ corpsee_site_user }}"
  args:
    chdir:   "/var/www/{{ corpsee_site_hostname }}"
    creates: "/var/www/{{ corpsee_site_hostname }}/www/files/compiled/frontend.min.css"

- name:        Make migrations
  command:     ./console migrations:migrate
  become:      yes
  become_user: "{{ corpsee_site_user }}"
  args:
    chdir:   "/var/www/{{ corpsee_site_hostname }}"
    creates: "/var/www/{{ corpsee_site_hostname }}/www/files/compiled/frontend.min.css"

- name:     Create Corpsee site host
  template: src=corpsee_site.conf dest="/etc/nginx/sites-available/{{ corpsee_site_hostname }}.conf"

- name:   Enable Corpsee site host
  file:   src="/etc/nginx/sites-available/{{ corpsee_site_hostname }}.conf" dest="/etc/nginx/sites-enabled/{{ corpsee_site_hostname }}.conf" state=link
  notify: Restart Nginx
