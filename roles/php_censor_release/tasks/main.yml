---

- name:     Register release datetime
  command:  date +%Y-%m-%d_%H-%M-%S
  register: release_datetime

- name:        Copy current release for backup
  shell:       "cp --dereference --recursive --no-target-directory /var/www/{{ php_censor_dir_name }}/current /var/www/{{ php_censor_dir_name }}/{{ php_censor_dir_name }}_{{ release_datetime.stdout }}"
  become:      yes
  become_user: "{{ php_censor_user }}"

- name:        Copy current release SQL dump for backup
  shell:       "pg_dump -O --column-inserts -F p -U {{ php_censor_db_user }} -d {{ php_censor_db_name }} -h 127.0.0.1 | grep -v -E '^(CREATE\ EXTENSION|COMMENT\ ON)' > /var/www/{{ php_censor_dir_name }}/{{ php_censor_dir_name }}_{{ release_datetime.stdout }}/{{ php_censor_db_name }}.backup.sql"
  become:      yes
  become_user: "{{ php_censor_user }}"

- name:        Create current release backup archive
  shell:       "tar --create --gzip --file=\"/home/web/backup/{{ php_censor_dir_name }}_{{ release_datetime.stdout }}.tar.gz\" ."
  become:      yes
  become_user: "{{ php_censor_user }}"
  args:
    chdir: "/var/www/{{ php_censor_dir_name }}/{{ php_censor_dir_name }}_{{ release_datetime.stdout }}"

- name:        Delete current release for backup
  file:        path="/var/www/{{ php_censor_dir_name }}/{{ php_censor_dir_name }}_{{ release_datetime.stdout }}" state=absent
  become:      yes
  become_user: "{{ php_censor_user }}"

- name:        Clone latest PHP Censor repository (LOCAL)
  git:         repo="git@github.com:php-censor/php-censor.git" version="{{ php_censor_version }}" dest="{{ role_path }}/files/{{ release_datetime.stdout }}" accept_hostkey=yes
  become:      yes
  become_user: "{{ php_censor_localhost_user }}"
  delegate_to: "127.0.0.1"

- name: Delete shared directories (LOCAL)
  file: path="{{ role_path }}/files/{{ release_datetime.stdout }}/{{ item }}" state=absent
  loop:
    - "runtime"
    - "public/artifacts"
    - "app"
  become:      yes
  become_user: "{{ php_censor_localhost_user }}"
  delegate_to: "127.0.0.1"

- name:    Install PHP Censor dependencies (LOCAL)
  command: "php{{ php_censor_php_version }} /usr/local/bin/composer install --no-dev --optimize-autoloader --prefer-dist"
  args:
    chdir:   "{{ role_path }}/files/{{ release_datetime.stdout }}"
    creates: "{{ role_path }}/files/{{ release_datetime.stdout }}/vendor"
  become:      yes
  become_user: "{{ php_censor_localhost_user }}"
  delegate_to: "127.0.0.1"

- name: Delete non-production files (LOCAL)
  file: path="{{ role_path }}/files/{{ release_datetime.stdout }}/{{ item }}" state=absent
  loop:
    - ".git"
    - ".github"
    - "docs"
    - "tests"
    - ".codecov.yml"
    - ".editorconfig"
    - ".gitattributes"
    - ".gitignore"
    - ".php-censor.yml"
    - ".php_cs.dist"
    - ".travis.yml"
    - "phpmd.xml.dist"
    - "phpunit.xml.dist"
    - "app/.gitkeep"
    - "public/artifacts/.gitkeep"
  become:      yes
  become_user: "{{ php_censor_localhost_user }}"
  delegate_to: "127.0.0.1"

- name:        Archive PHP Censor release (LOCAL)
  shell:       "tar --create --gzip --file=\"{{ role_path }}/files/{{ release_datetime.stdout }}.tar.gz\" ."
  become:      yes
  become_user: "{{ php_censor_localhost_user }}"
  args:
    chdir: "{{ role_path }}/files/{{ release_datetime.stdout }}"
  delegate_to: "127.0.0.1"

- name: Creates PHP Censor release directory
  file: path="/var/www/{{ php_censor_dir_name }}/releases/{{ release_datetime.stdout }}" state=directory

- name:      Copy PHP Censor release to host
  unarchive: src="{{ role_path }}/files/{{ release_datetime.stdout }}.tar.gz" dest="/var/www/{{ php_censor_dir_name }}/releases/{{ release_datetime.stdout }}"

- name: Set shared directories links
  file: src="{{ item.src }}" dest="{{ item.dest }}" state=link
  loop:
    - { src: "../../shared/runtime", dest: "/var/www/{{ php_censor_dir_name }}/releases/{{ release_datetime.stdout }}/runtime" }
    - { src: "../../../shared/public/artifacts", dest: "/var/www/{{ php_censor_dir_name }}/releases/{{ release_datetime.stdout }}/public/artifacts" }
    - { src: "../../{{ php_censor_dir_name }}/shared/app", dest: "/var/www/{{ php_censor_dir_name }}/releases/{{ release_datetime.stdout }}/app" }

- name: Set permissions for PHP Censor directory
  file: path="/var/www/{{ php_censor_dir_name }}/releases/{{ release_datetime.stdout }}" owner={{ php_censor_user }} group={{ php_censor_group }} mode="ug=rwX,o=rX" recurse=yes

- name: Set PHP Censor console executable
  file: path="/var/www/{{ php_censor_dir_name }}/releases/{{ release_datetime.stdout }}/bin" owner={{ php_censor_user }} group={{ php_censor_group }} mode="ugo+x" recurse=yes

- name:        Make migrations
  command:     ./bin/console php-censor-migrations:migrate
  become:      yes
  become_user: "{{ php_censor_user }}"
  args:
    chdir: "/var/www/{{ php_censor_dir_name }}/releases/{{ release_datetime.stdout }}"

- name: Set current release link
  file: src="./releases/{{ release_datetime.stdout }}" dest="/var/www/{{ php_censor_dir_name }}/current" state=link

- name:  Restart PHP Censor worker systemd service
  shell: "systemctl restart '{{ php_censor_queue_name }}@*.service'"

- name:    Restart PHP FPM systemd service
  systemd: name="php{{ php_censor_php_version }}-fpm.service" state=restarted
