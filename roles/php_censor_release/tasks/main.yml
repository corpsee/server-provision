---

- name:     Register release datetime
  command:  date +%Y-%m-%d_%H-%M-%S
  register: release_datetime

- name: Clone latest PHP Censor repository
  git:  repo="git@github.com:php-censor/php-censor.git" version="{{ php_censor_version }}" dest="/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}" key_file="/root/.ssh/web_server_github" accept_hostkey=yes

- name: Delete shared directories
  file: path="{{ item }}" state=absent
  loop:
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/runtime"
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/public/artifacts"

- name: Set shared directories links
  file: src="{{ item.src }}" dest="{{ item.dest }}" state=link
  loop:
    - { src: "/var/www/{{ php_censor_hostname }}/shared/runtime", dest: "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/runtime" }
    - { src: "/var/www/{{ php_censor_hostname }}/shared/public/artifacts", dest: "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/public/artifacts" }

- name:     Create PHP Censor application config (config.yml)
  template: src=config.yml dest="/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/app/config.yml"

- name: Create PHP Censor periodical config (periodical.yml)
  copy: src="{{ role_path }}/files/periodical.yml" dest="/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/app/periodical.yml"

- name: Delete non-production files
  file: path="{{ item }}" state=absent
  loop:
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/.git"
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/.github"
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/docs"
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/tests"
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/.codecov.yml"
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/.editorconfig"
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/.gitattributes"
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/.gitignore"
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/.php-censor.yml"
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/.php_cs.dist"
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/.travis.yml"
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/phpmd.xml.dist"
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/phpunit.xml.dist"
    - "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/app/.gitkeep"

- name: Set permitions for PHP Censor directory
  file: path="/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}" owner={{ php_censor_user }} group={{ php_censor_group }} mode="ug=rwX,o=rX" recurse=yes

- name: Set PHP Censor console executable
  file: path="/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/bin" owner={{ php_censor_user }} group={{ php_censor_group }} mode="ugo+x" recurse=yes

- name:        Install PHP Censor site dependencies
  command:     composer install --no-dev --optimize-autoloader
  become:      yes
  become_user: "{{ php_censor_user }}"
  args:
    chdir:   "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}"
    creates: "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}/vendor"

- name:        Make migrations
  command:     ./bin/console php-censor-migrations:migrate
  become:      yes
  become_user: "{{ php_censor_user }}"
  args:
    chdir: "/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}"

- name:    Restart PHP Censor worker systemd service
  systemd: name="{{ php_censor_queue_name }}.service" state=restarted

- name: Set current release link
  file: src="/var/www/{{ php_censor_hostname }}/releases/{{ release_datetime.stdout }}" dest="/var/www/{{ php_censor_hostname }}/current" state=link
